# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu-trusty64"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "ubuntu/trusty64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network :forwarded_port, guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.15"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder  '.', '/vagrant', :nfs => true

  # The path to the Berksfile to use with Vagrant Berkshelf
  # config.berkshelf.berksfile_path = "./vagrant/chef/Berksfile"

  # Enabling the Berkshelf plugin. To enable this globally, add this configuration
  # option to your ~/.vagrant.d/Vagrantfile file
  # config.berkshelf.enabled = true

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to exclusively install and copy to Vagrant's shelf.
  # config.berkshelf.only = []

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to skip installing and copying to Vagrant's shelf.
  # config.berkshelf.except = []

  # Chef provisionser
  # config.vm.provision :chef_solo do |chef|
  #   chef.json = {
  #     :webapp => {
  #       :app_name => webapp_name,
  #       :phpmyadmin => true,
  #       :php => {
  #         :directives => {
  #           "cgi.fix_pathinfo"  => 0
  #         }
  #       }
  #     },
  #     :mariadb => {
  #       :remove_anonymous_users => true,
  #       :allow_remote_root => true,
  #       :remove_test_database => true,
  #       :server_root_password => 'webapp!',
  #       :server_repl_password => 'webapp!',
  #       :server_debian_password => 'webapp!'
  #     },
  #     :nginx => {
  #       :sendfile => 'off',
  #       :install_method => 'package',
  #       :default_site_enabled => false
  #     }
  #   }

  #   Set which recipes to run
  #   chef.add_recipe "apt"
  #   chef.add_recipe "webapp::default"
  # end

  # Puppet standalone provisioner
  # config.vm.provision :puppet do |puppet|
  #   puppet.module_path = "vagrant/puppet/modules"
  #   puppet.manifests_path = "vagrant/puppet/manifests"
  #   puppet.manifest_file  = "init.pp"
  #   puppet.options = "--verbose --debug"
  # end

end
